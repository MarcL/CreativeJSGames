function SineEnemy( edge ) {

	var edge = this.connectedEdge = edge ; 
	var wanderPadding = 0.2 ;
	var speed = 10 ;
	this.ctr = 0 ;
	
	this.width = 20; 
	this.height = 30; 
	
	var pos = this.pos = new Vector2( 0, edge.getTop() ) ; 
	
	speed /= edge.width ;
	
	this.setPosition = function( val ) {
		var halfWidth = (edge.width / 2) - (wanderPadding * edge.width) ;
		this.xAnchor = edge.getCenter() - (this.width/2) ;
		this.pos.x = this.xAnchor + ( val * halfWidth ) ;
	};
	
	this.setPosition( 0.5 ) ;
	
	this.update = function (){
		var sVal = Math.sin( speed * this.ctr ) ;
		this.setPosition( sVal ) ;
		this.ctr++ ;
	}; 
	
	this.render = function(c){
		
		c.save(); 
		
		c.fillStyle = "red"; 
		
		c.fillRect(this.getLeft(), this.getTop(), this.width, this.height); 
		
		c.restore(); 
	};
	
	this.getLeft = function() { 
		return pos.x; 
	};
	
	this.getRight = function() { 
		return pos.x+this.width; 
	};

	this.getTop = function() {
		return pos.y-this.height; 
	};
	
	this.getBottom = function () {
		return pos.y; 
	};

}